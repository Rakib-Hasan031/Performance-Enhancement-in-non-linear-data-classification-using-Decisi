from sklearn.tree import DecisionTreeClassifier
from sklearn.decomposition import PCA
from sklearn.svm import SVC
import matplotlib.pyplot as plt
from matplotlib.colors import ListedColormap
import numpy as np
from planar_utils import plot_decision_boundary, sigmoid, load_planar_dataset, load_extra_datasets
from sklearn.feature_selection import f_classif, chi2, mutual_info_classif
from statsmodels.stats.multicomp import pairwise_tukeyhsd
from sklearn import tree
from sklearn.model_selection import StratifiedKFold, cross_val_score
from scipy.stats import randint as sp_randint
from sklearn.ensemble import BaggingClassifier
from importlib import reload
from pprint import pprint
from patsy import dmatrices
from sklearn.model_selection import train_test_split

X_train,X_test, Y_train, Y_test = train_test_split(X.T,Y.T,test_size=0.3)
model = tree.DecisionTreeClassifier(criterion = 'entropy', max_depth=14)
kfold = StratifiedKFold(n_splits= 10, shuffle = True)
scores = cross_val_score(model, X.T, Y.T, cv = kfold)

accuracy1 = [] 
hidden_layer_sizes = [1, 2, 3, 4, 5]
for i, n_h in enumerate(hidden_layer_sizes):
    parameters = nn_model(A, B, n_h, num_iterations = 5000)
    predictions = predict(parameters, A)
    score = float((np.dot(B,predictions.T) + np.dot(1-B,1-predictions.T))/float(B.size)*100)
    accuracy1.append(score)
print("Accuracy: ", accuracy1)
fig, ax = plt.subplots(nrows = 1, ncols = 1, figsize = (10,7));

marker_style = dict(color='tab:blue', linestyle=':', marker='o',
                    markersize=15, markerfacecoloralt='tab:red')

ax.plot(max_depth_range,
        accuracy,
        lw=2,
        color='k',
        zorder = 0)




ax.set_xlim([1, 30])
ax.set_ylim([.50, 1.00])
ax.grid(True,
        axis = 'both',
        zorder = 1,
        linestyle = ':',
        color = 'k')

yticks = ax.get_yticks()

y_ticklist = []
for tick in yticks:
    y_ticklist.append(str(tick).ljust(4, '0')[0:4])
ax.set_yticklabels(y_ticklist)
ax.tick_params(labelsize = 18)
ax.set_xticks([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30])
ax.set_xlabel('Layer_Size', fontsize = 24)
ax.set_ylabel('Accuracy', fontsize = 24)
fig.tight_layout()
fig.savefig('../images/max_depth_vs_entropy.png', dpi = 300)
